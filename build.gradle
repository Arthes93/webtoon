buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        mooworkVersion = '1.2.0'
    }
    repositories {
//        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${mooworkVersion}")
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'


group = 'com.essri'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile ('org.springframework.boot:spring-boot-starter-test')
    runtimeOnly('com.h2database:h2')
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.5.1'
//    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.2.Final'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile('org.springframework.boot:spring-boot-starter-security')
//    compile 'org.springframework.security:spring-security-config:4.2.2.RELEASE'
    compile group: 'com.google.guava', name: 'guava', version: '25.0-jre'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'

    compileOnly('org.projectlombok:lombok')
    testCompileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    compile 'org.jsoup:jsoup:1.11.3'

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

def webappDir = "$projectDir/frontend/webtoon"

node {
    version = '12.6.0'
    download=true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir=file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend/webtoon")
    args = ["install"]
}

task yarnBuild(type: YarnTask) {
    workingDir = file("${project.projectDir}/frontend/webtoon")
    args = ['build']
}

task copyWebApp(type: Copy) {
    from "frontend/webtoon/build"
    into 'build/resources/main/static/.'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

yarnBuild.dependsOn appNpmInstall
copyWebApp.dependsOn yarnBuild
compileJava.dependsOn copyWebApp
